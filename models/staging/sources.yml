version: 2
sources:
  - name: tb_101
    description: "Point of Sale source data"
    database: tasty_bytes_dbt_db
    schema: RAW

    tables:

      - name: COUNTRY
        description: "Country reference data"
        columns:
          - name: COUNTRY_ID
            description: "Primary key for countries (not guaranteed unique in raw)"
            tests:
              - not_null
          - name: COUNTRY
            description: "Country name"
            tests:
              - not_null
          - name: ISO_CURRENCY
            description: "ISO currency code"
          - name: ISO_COUNTRY
            description: "ISO country code"
            tests:
              - not_null
          - name: CITY_ID
            description: "City identifier"
          - name: CITY
            description: "City name"
          - name: CITY_POPULATION
            description: "City population count"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"

      - name: FRANCHISE
        description: "Franchise ownership data"
        columns:
          - name: FRANCHISE_ID
            description: "Primary key for franchises (not guaranteed unique in raw)"
            tests:
              - not_null
          - name: FIRST_NAME
            description: "Franchise owner first name"
            tests: [not_null]
          - name: LAST_NAME
            description: "Franchise owner last name"
            tests: [not_null]
          - name: CITY
            description: "City where franchise is based"
          - name: COUNTRY
            description: "Country where franchise is based"
          - name: E_MAIL
            description: "Contact email"
            tests: [not_null]
          - name: PHONE_NUMBER
            description: "Contact phone number"

      - name: LOCATION
        description: "Business locations data"
        columns:
          - name: LOCATION_ID
            description: "Primary key for locations"
            tests: [unique, not_null]
          - name: PLACEKEY
            description: "Standard location identifier"
            tests: [unique]
          - name: LOCATION
            description: "Location name"
            tests: [not_null]
          - name: CITY
            description: "City name"
            tests: [not_null]
          - name: REGION
            description: "Regional identifier"
          - name: ISO_COUNTRY_CODE
            description: "ISO country code"
            tests: [not_null]
          - name: COUNTRY
            description: "Country name"
            tests: [not_null]

      - name: MENU
        description: "Food menu items data"
        columns:
          - name: MENU_ID
            description: "Primary key for menu items"
            tests: [unique, not_null]
          - name: MENU_TYPE_ID
            description: "Menu type reference"
            tests: [not_null]
          - name: MENU_TYPE
            description: "Type of menu"
          - name: TRUCK_BRAND_NAME
            description: "Brand name for truck"
          - name: MENU_ITEM_ID
            description: "Item identifier on menu"
            tests: [not_null]
          - name: MENU_ITEM_NAME
            description: "Name of menu item"
            tests: [not_null]
          - name: ITEM_CATEGORY
            description: "Category of food item"
          - name: COST_OF_GOODS_USD
            description: "Cost to prepare item"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"
          - name: SALE_PRICE_USD
            description: "Retail price of item"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"
          - name: MENU_ITEM_HEALTH_METRICS_OBJ
            description: "Health metrics for menu item"

      - name: ORDER_DETAIL
        description: "Order line item details"
        columns:
          - name: ORDER_DETAIL_ID
            description: "Primary key for order details"
            tests: [not_null]
          - name: ORDER_ID
            description: "Foreign key to order header"
            tests:
              - not_null
              - relationships:
                  to: source('tb_101', 'ORDER_HEADER')
                  field: ORDER_ID
          - name: MENU_ITEM_ID
            description: "Foreign key to menu"
            tests:
              - not_null
              - relationships:
                  to: source('tb_101', 'MENU')
                  field: MENU_ITEM_ID
          - name: DISCOUNT_ID
            description: "Optional discount applied"
          - name: LINE_NUMBER
            description: "Line number on order"
            tests: [not_null]
          - name: QUANTITY
            description: "Quantity ordered"
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} > 0"
          - name: UNIT_PRICE
            description: "Price per unit"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"
          - name: PRICE
            description: "Total line price"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"
          - name: ORDER_ITEM_DISCOUNT_AMOUNT
            description: "Discount amount for line"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"

      - name: ORDER_HEADER
        description: "Order header information"
        config:
          loaded_at_field: ORDER_TS
          # optional table-level freshness; uncomment if you want source freshness checks here
          # freshness:
          #   warn_after: {count: 1, period: day}
          #   error_after: {count: 2, period: day}
        columns:
          - name: ORDER_ID
            description: "Primary key for orders (raw may contain dupes; enforce in staging)"
            tests: [not_null]
          - name: TRUCK_ID
            description: "Foreign key to TRUCK"
            tests:
              - not_null
              - relationships:
                  to: source('tb_101', 'TRUCK')
                  field: TRUCK_ID
          - name: LOCATION_ID
            description: "Foreign key to LOCATION"
            tests:
              - not_null
              - relationships:
                  to: source('tb_101', 'LOCATION')
                  field: LOCATION_ID
          - name: CUSTOMER_ID
            description: "Customer identifier"
          - name: DISCOUNT_ID
            description: "Discount applied to order"
          - name: SHIFT_ID
            description: "Shift identifier"
          - name: SHIFT_START_TIME
            description: "Shift start time"
          - name: SHIFT_END_TIME
            description: "Shift end time"
          - name: ORDER_CHANNEL
            description: "Order channel (app, in-person)"
          - name: ORDER_TS
            description: "Order timestamp"
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} <= current_timestamp()"
          - name: SERVED_TS
            description: "Time order was served"
          - name: ORDER_CURRENCY
            description: "Currency of the order"
            tests: [not_null]
          - name: ORDER_AMOUNT
            description: "Pre-tax order amount"
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"
          - name: ORDER_TAX_AMOUNT
            description: "Tax amount"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"
          - name: ORDER_DISCOUNT_AMOUNT
            description: "Discount amount"
            tests:
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"
          - name: ORDER_TOTAL
            description: "Total order amount"
            tests:
              - not_null
              - dbt_utils.expression_is_true:
                  expression: "{{ column_name }} >= 0"

      - name: TRUCK
        description: "Food truck data"
        columns:
          - name: TRUCK_ID
            description: "Primary key for trucks"
            tests: [unique, not_null]
          - name: MENU_TYPE_ID
            description: "Type of menu on truck"
            tests: [not_null]
          - name: PRIMARY_CITY
            description: "Main city for truck"
            tests: [not_null]
          - name: REGION
            description: "Region where truck operates"
          - name: ISO_REGION
            description: "ISO region code"
          - name: COUNTRY
            description: "Country where truck operates"
            tests: [not_null]
          - name: ISO_COUNTRY_CODE
            description: "ISO country code"
          - name: FRANCHISE_FLAG
            description: "Whether truck is franchised"
          - name: YEAR
            description: "Year of truck manufacture"
            tests: [not_null]
          - name: MAKE
            description: "Truck manufacturer"
          - name: MODEL
            description: "Truck model"
          - name: EV_FLAG
            description: "Whether truck is electric"
          - name: FRANCHISE_ID
            description: "Foreign key to FRANCHISE"
            tests:
              - relationships:
                  to: source('tb_101', 'FRANCHISE')
                  field: FRANCHISE_ID
          - name: TRUCK_OPENING_DATE
            description: "Date truck began operations"
            tests: [not_null]

      - name: CUSTOMER_LOYALTY
        description: "Customer loyalty program master"
        columns:
          - name: CUSTOMER_ID
            description: "Primary key for customer (raw)"
          - name: FIRST_NAME
            description: "First name"
          - name: LAST_NAME
            description: "Last name"
          - name: CITY
            description: "Customer city"
          - name: COUNTRY
            description: "Customer country"
          - name: POSTAL_CODE
            description: "Postal code"
          - name: PREFERRED_LANGUAGE
            description: "Preferred language"
          - name: GENDER
            description: "Gender (if provided)"
          - name: FAVOURITE_BRAND
            description: "Preferred brand"
          - name: MARITAL_STATUS
            description: "Marital status"
          - name: CHILDREN_COUNT
            description: "Number of children (string values like 'Undisclosed' may appear in raw)"
            tests:
              - dbt_utils.expression_is_true:
                  expression: ">= 0"
                  config:
                    where: "regexp_like(CHILDREN_COUNT, '^[+-]?(\\d+\\.?\\d*|\\.\\d+)$')"
          - name: SIGN_UP_DATE
            description: "Program enrollment date"
          - name: BIRTHDAY_DATE
            description: "Date of birth"
          - name: E_MAIL
            description: "Email address"
          - name: PHONE_NUMBER
            description: "Phone number"
